<%- include('../admin/header.ejs')   %>





<style type="text/css">
  img {
      display: block;
      max-width: 100%;
  }
  .preview {
      overflow: hidden;
      width: 160px; 
      height: 160px;
      margin: 10px;
      border: 1px solid red;
  }

</style>




<!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"> -->

	<!-- SIDEBAR -->
  <section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">LapMania</span>
		</a>
		<ul class="side-menu top">
			<li >
				<a href="/admin/home">
					<i class='bx bxs-dashboard' ></i>
					<span class="text">Dashboard</span>
				</a>
			</li>
			<li>
				<a href="/admin/customers">
                    <i class='bx bxs-user-account'></i> 
					<span class="text">Customers</span>
				</a>
			</li>
			<li >
				<a href="/admin/orders">
					<i class='bx bxs-shopping-bags' ></i>
					<span class="text">Orders</span>
				</a>
			</li >
			<li class="active">
				<a href="/admin/category">
					<i class='bx bx-category' ></i>
					<span class="text">Categories</span>
				</a>
			</li>
            <li >
				<a href="/admin/Products">
                    <i class='bx bxs-cart-alt' ></i>
					<span class="text">Products</span>
				</a>
			</li>
            <li >
				<a href="/admin/banner">
					<i class='bx bxs-carousel'></i>
					<span class="text">Banner</span>
				</a>
			</li>
            <li >
				<a href="/admin/coupon">
					<i class='bx bxs-coupon'></i>
					<span class="text">Coupon</span>
				</a>
			</li>
			<li  >
				<a href="/admin/sales">
					<i class='bx bx-money' ></i>
					<span class="text">Sales</span>
				</a>
			</li>
		</ul>
		<ul class="side-menu">
			
			<li >
				<a href="/admin/logout" class="logout">
					<i class='bx bxs-log-out-circle' ></i>
					<span class="text">Logout</span>
				</a>
			</li>
		</ul>
	</section>
	<!-- SIDEBAR -->



	<!-- CONTENT -->
	<section id="content">
		<!-- NAVBAR -->
        <nav>
			<i class='bx bx-menu'  style="display: none;"></i>
			<a href="#" class="nav-link" style="display: none;">Categories</a>
			<form action="#">
				<div class="form-input" style="display: none;">
					<input type="search" placeholder="Search...">
					<button type="submit" class="search-btn"><i class='bx bx-search' ></i></button>
				</div>
			</form>
			<input type="checkbox" id="switch-mode" hidden>
			<label for="switch-mode" class="switch-mode"></label>
			<a href="#" class="notification">
				<i class='bx bxs-bell' ></i>
				<span class="num">8</span>
			</a>
			<a href="#" class="profile">
				<img src="img/people.png">
			</a>
		</nav>
		<!-- NAVBAR -->

		<!-- MAIN -->
		<main>
			<div class="head-title">
				<div class="left">
					<h1>Categories</h1>
					<ul class="breadcrumb">
						<li>
							<a class="active" href="/admin/Products">Categories</a>
						</li>
                        <li><li><i class='bx bx-chevron-right' ></i></li>
							<a class="active" href="#">Add Categories</a>
						</li>
					</ul>
				</div>
                
			</div>



    <!-- <div class="container py-5"> -->
      
    <div class="" style="border-radius: 20px; background-color: #f9f9f9;"> 
      <div class="row d-flex justify-content-center  ">
      
        <div class="col-lg-8 " >
          <div class="card mb-4 mt-3 me-4" style="background-color: #f9f9f9;">
            <div class="card-body">
              <form action="/admin/addCategory" method="post" enctype="multipart/form-data" >
                <% if(typeof message !== 'undefined'){ %>
                  <p
                    style="
                      color: red;
                      padding-left: 100px;
                      padding-bottom: 30px;
                    "
                  >
                    <%= message %>
                  </p>
                  <% } %>
              <div class="row ">
                <div class="col-sm-3">
                  <p class="mb-0">Category</p>
                </div>
                <div class="col-sm-9">
                    <input type="text" name="category" style="border: none;" >
                </div>
              </div>
             

              <hr>
              
              <div class="row">
                <div class="col-sm-3">
                  <p class="mb-0">Image</p>
                </div>
                <div class="col-sm-9">
                  <div class="custom-file">
                    <input type="file" class="image" id="customFile"   name="image" accept=".JPEG,.JPG,.PNG" data-parsley-trigger ="change" >
                    <p id="alert" style="color: red;"></p>
                   
                </div>
                </div>
              </div>
              
              <hr>
              <button type="submit" class="btn btn-primary">submit</button>

              </form>
            </div>
          </div>
          
    </div>
  
    <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body w-75" >
            <img id="cropperImage" src="#" alt="Image preview" width="100">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="saveCroppedImage">Save</button>
          </div>
        </div>
      </div>
    </div>
             <div class="mt-5">
                        <img id="image" src="#"  width="100">
                    </div>
                    <input type="hidden" type="file" name="croppedImage" id="croppedImage">
                     
		</main>
		<!-- MAIN -->
	</section>
	<!-- CONTENT -->






  <script>
  var cropper;

document.getElementById('customFile').addEventListener('change', function(event) {
  var input = event.target;
  var reader = new FileReader();
  reader.onload = function() {
    var dataURL = reader.result;
    var output = document.getElementById('image');
    output.src = dataURL;
    // Replace the image in the cropper
    if (cropper) {
      cropper.replace(dataURL);
    } else {
      // Initialize the cropper inside the modal when the "Crop" button is clicked
      document.getElementById('cropperImage').src = dataURL;
      $('#cropModal').on('shown.bs.modal', function () {
        cropper = new Cropper(document.getElementById('cropperImage'), {
          aspectRatio: 1, // Set the aspect ratio to 1:1
          viewMode: 1, // Set the view mode to "crop box"
        });
      });
    }
    // Show the modal
    $('#cropModal').modal('show');
  };
  reader.readAsDataURL(input.files[0]);
});

// Add an event listener to the save button to handle the upload process
document.getElementById('saveCroppedImage').addEventListener('click', function() {
  if (!cropper) {
    return;
  }
  // Retrieve the cropped image data from the cropper
  var croppedImageData = cropper.getCroppedCanvas().toDataURL('image/jpeg');

  // Change the input file to the cropped image
  var input = document.getElementById('customFile');
  var file = dataURItoBlob(croppedImageData);
  var fileName = 'croppedImage.jpg';
  var newFile = new File([file], fileName, { type: file.type });
  input.files = [newFile];

  // Hide the modal
  $('#cropModal').modal('hide');
});


// Helper function to convert base64 data URI to a Blob object
function dataURItoBlob(dataURI) {
  var byteString = atob(dataURI.split(',')[1]);
  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
  var ab = new ArrayBuffer(byteString.length);
  var ia = new Uint8Array(ab);
  for (var i = 0; i < byteString.length; i++) {
    ia[i] = byteString.charCodeAt(i);
  }
  return new Blob([ab], {type: mimeString});
}


document.getElementById('saveCroppedImage').addEventListener('click', function() {
  if (!cropper) {
    return;
  }

  // Retrieve the cropped image data from the cropper
  var croppedImageData = cropper.getCroppedCanvas().toDataURL('image/jpeg');

  // Create a new Blob object from the cropped image data
  var croppedImageBlob = dataURItoBlob(croppedImageData);

  // Create a new File object from the cropped image blob with the original filename
  var croppedImageFile = new File([croppedImageBlob], document.getElementById('customFile').files[0].name, { type: 'image/jpeg' });

// Helper function to create a new FileList object
function FileListItem(a) {
  a = [].slice.call(Array.isArray(a) ? a : arguments)
  for (var c, b = c = a.length, d = !0; b-- && d;) d = a[b] instanceof File
  if (!d) throw new TypeError("expected argument to FileList is File or array of File objects")
  for (b = (new ClipboardEvent("")).clipboardData || new DataTransfer; c--;) b.items.add(a[c])
  return b.files
}

  // Replace the value of the customFile input with the new cropped image file
  document.getElementById('customFile').value = '';
  var input = document.getElementById('customFile');
  input.files = new FileListItem([croppedImageFile]);
  // Hide the modal
  $('#cropModal').modal('hide');
}); 


















      const  input = document.querySelector('input[type="file"]');
    input.addEventListener('change',()=>{
      const file = input.files[0];
      if(!file.type.includes('image/')){
        // alert(' Image file should be jpg,jpeg,png.try again');
        const alert= document.getElementById('alert').textContent="File type is not allowed. Only JPG,JPEG and PNG images are allowed."
  
        input.value = '';
      }
      const reader = new FileReader();
      reader.addEventListener('load',()=>{
  
      })
      reader.readAsDataURL(file);
    })







  </script>


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>












<%- include('../admin/footer.ejs') %>
